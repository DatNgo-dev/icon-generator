import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { Button } from "~/component/Button";
import { FormGroup } from "~/component/FormGroup";
import { Input } from "~/component/Input";
import { api } from "~/utils/api";
import Image from "next/image";

const COLORS = [
  "blue",
  "red",
  "green",
  "yellow",
  "purple",
  "pink",
  "indigo",
  "gray",
  "orange",
  "teal",
  "cyan",
  "lightBlue",
  "lime",
  "amber",
  "emerald",
  "rose",
  "fuchsia",
  "violet",
  "lightPurple",
  "coolGray",
  "trueGray",
  "warmGray",
];

const GeneratePage: NextPage = () => {
  const [form, setForm] = useState({
    prompt: "",
    colour: "",
  });
  const [imageUrl, setImageUrl] = useState("");

  const generateIcon = api.generate.generateIcon.useMutation({
    onSuccess(data) {
      if (!data.imageUrl) return;
      setImageUrl(data.imageUrl);
    },
  });

  function handleFormSubmit(e: React.FormEvent<HTMLFormElement>) {
    e.preventDefault();
    generateIcon.mutate({
      ...form,
    });
    // setForm((prev) => ({
    //   ...prev,
    //   prompt: "",
    // }));
  }

  function updateForm(key: string) {
    return function (e: React.ChangeEvent<HTMLInputElement>) {
      setForm((prev) => ({
        ...prev,
        [key]: e.target.value,
      }));
    };
  }

  return (
    <>
      <Head>
        <title>Generate Icons</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto mt-24 flex min-h-screen flex-col gap-4">
        <h1 className="text-6xl">Generate your icons</h1>
        <p className="mb-12 text-2xl">
          Fill out the form below to start generating your icons.
        </p>
        <form className="flex flex-col gap-4" onSubmit={handleFormSubmit}>
          <h2>1. Describe what your icon to look like.</h2>
          <FormGroup className="mb-12">
            <label>Prompt</label>
            <Input value={form.prompt} onChange={updateForm("prompt")}></Input>
          </FormGroup>

          <h2>2. Pick your icon colour</h2>
          <FormGroup className="mb-12 grid grid-cols-4">
            {COLORS.map((colour) => {
              return (
                <label key={colour} className="flex gap-2 text-lg">
                  <input
                    type="radio"
                    name="colour"
                    value={colour}
                    checked={colour === form.colour}
                    onChange={() => setForm((prev) => ({ ...prev, colour }))}
                  />
                  {colour}
                </label>
              );
            })}
          </FormGroup>

          <Button
            isLoading={generateIcon.isLoading}
            disabled={generateIcon.isLoading}
            className="disabled:bg-gray-600"
          >
            Submit
          </Button>
        </form>
        {imageUrl && (
          <>
            <h2 className="text-xl">Your Icons</h2>
            <section className="grid grid-cols-4 gap-4">
              <Image
                src={imageUrl}
                alt="An image of your generated prompt"
                height="100"
                width="100"
                className="w-full"
              />
            </section>
          </>
        )}
      </main>
    </>
  );
};

export default GeneratePage;
